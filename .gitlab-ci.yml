variables:
  http_proxy: proxy1.mtd.cisco-services.com:8080
  GIT_STRATEGY: clone
  ARTIFACTORY_TOKEN: eyJ2ZXIiOiIyIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYiLCJraWQiOiJObU1ubTBjS1dESjV3MUlNM2p6Rm50ZFdQRmZ2LVJzdHFsdEpUR0lqZTN3In0.eyJzdWIiOiJqZnJ0QDAxYnZzdDVra3N5MDNlMTBzc256cXMxem1hXC91c2Vyc1wvdG9rZW5fYXRhLXJwbS1zeW5jLXRlc3QiLCJzY3AiOiJtZW1iZXItb2YtZ3JvdXBzOnRva2VuX2F0YS1ycG0tc3luYy10ZXN0IGFwaToqIiwiYXVkIjoiamZydEAwMWJ2c3Q1a2tzeTAzZTEwc3NuenFzMXptYSIsImlzcyI6ImpmcnRAMDFidnN0NWtrc3kwM2UxMHNzbnpxczF6bWEiLCJpYXQiOjE1MTM5MDA2NTQsImp0aSI6IjFkZTQ3MDJmLWZlZTAtNDZkYS04MWU1LTQ0MDk0NzBiMWI5MyJ9.hZFWNmJ6XV4xhR6j7uFYy48f_c8KaVSAX_BJ8LVOJmhjCs4ZSHnfAo6yls4htG8nAAWs9BggfMv29kZvjN-YWnxcmJKlM5uzU-M32otg8FLDhJjnZZmQX-S6Ys5NunfoOXdMMnMP76OCEClY0BTa2IwBPvvI9zvoYbinAmzqY4CzZ4boA0OXEQZRoSJWT5UZYt9_EUeOGS35lLVjvzxkIIvJA9uXLiIak1DIR2xWXKmtDIb6ZFqIsBVsSNeAc42hcENzjQziqqfUSyEYKXSD53Zx71YshdNl4ngCQUMUfPOeD8apHhoWi2OXwpy9BsSTj8embzgUKVBuZlu-eGW_EA
  ARTIFACTORY_REPO: ata-rpm-sync-test
  ARTIFACTORY_URL: "https://artifactory.mtd.cisco-services.com/artifactory"
  ARTIFACTORY_CMD: "curl -i -k -H 'Authorization: Bearer $ARTIFACTORY_TOKEN'"
  # Don't Make changes in following file name as this is strictly for RPM artifactory NOT YET in operation. 
  RPM_FILENAME: kshlib-0.1-1.el7.noarch.rpm
  

  # ------------Copy RPM ---------------
  TEST_REPO_RPM_PATH: /mnt/repo01/repos/test/ata3
  TEST_REPO_RPM_PATH_EXISTS: "[ -d /mnt/repo01/repos/test/ata3 ]"
  LOCAL_BUILD_RPM_PATH: RPMS/noarch
  RPM_FILENAME_REGEX: kshlib-*$${ver}*.rpm
  RPM_HEALTHCHECK_FILENAME_REGEX: kshlib-healthcheck-*$${health_ver}*.rpm
  #RPM_DEBUG_FILENAME_REGEX:
  RPM_FILE_LOCATION_DEV_TEST: /mnt/repo01/repos/test/ata3/kshlib-*$${ver}*.rpm

  #-----DEV Deployment--------------------
  DEV_ATA3_INVENTORY_FILE: ata3_hosts
  DEV_ATA3_ANSIBLE_GITLAB_SSH_KEY_FILE: ~/.ssh/dcm_id_rsa
  DEV_ATA3_GITLAB_URL: https://gitlab-ci-token:${CI_JOB_TOKEN}@alln-dev-gitlab.mtd.cisco-services.com/ATA3_LIGHTHOUSE/ata3-ansible.git
  # DEV_PLAYRUNNER_GITLAB_URL: https://gitlab-ci-token:${CI_JOB_TOKEN}@alln-dev-gitlab.mtd.cisco-services.com/playrunner/playrunner.git

  # -----PROD Deployment-------------------
  PROD_ATA3_INVENTORY_FILE: ata3_hosts
  PROD_ATA3_ANSIBLE_GITLAB_SSH_KEY_FILE: ~/.ssh/prod_dcm_id_rsa
  PROD_ATA3_GITLAB_URL: https://gitlab-ci-token:${CI_JOB_TOKEN}@alln-prod-gitlab.mtd.cisco-services.com/ATA3_LIGHTHOUSE/ata3-ansible.git
  # PROD_PLAYRUNNER_GITLAB_URL: https://gitlab-ci-token:${CI_JOB_TOKEN}@alln-prod-gitlab.mtd.cisco-services.com/playrunner/playrunner.git

  # DEV_GIT_PUSH_TO_PROD_CUSTOMER_EXCLUDE: git@alln-prod-gitlab.mtd.cisco-services.com:playrunner/playrunner.git



before_script:
  # helpful runner details
  - pwd && ifconfig | grep inet && uptime && free -m && df -h && ls -al && env && which mvn && mvn -version && git status && git log -n 5
  - export ver=`awk '$1=="Version:" {print $2}' kshlib.spec | head -1`
  - export health_ver=`awk '$1=="Version:" {print $2}' kshlib.spec | sed -n -e '2,2p'`

  # set environment variables used by jobs
  - export DEV_DEPLOY_CMD=""
  - export PROD_DEPLOY_CMD=""
  - export GITLAB_PUSH_CMD=""
  # - export PLAYRUNNER_INVENTORY_FILENAME=${DEV_ATA3_INVENTORY_FILE}
  - export INVENTORY_FILENAME=${DEV_ATA3_INVENTORY_FILE}

  #------- COPY RPM -------------------------
  - export CMD_COPY_RPM_TO_TEST_REPO="sudo /usr/bin/cp -f ${LOCAL_BUILD_RPM_PATH}/${RPM_FILENAME_REGEX} ${TEST_REPO_RPM_PATH} && sudo /usr/bin/chown 6001:100 ${TEST_REPO_RPM_PATH}/${RPM_FILENAME_REGEX}; sudo /usr/bin/chmod 775 ${TEST_REPO_RPM_PATH}/${RPM_FILENAME_REGEX}"
  - echo "CMD_COPY_RPM_TO_TEST_REPO=$CMD_COPY_RPM_TO_TEST_REPO"

  - export CMD_UPDATE_TEST_REPO_METADATA="cd ${TEST_REPO_RPM_PATH} && sudo /usr/bin/createrepo --update ${TEST_REPO_RPM_PATH}; sudo /usr/bin/chown -R 6001:100 ${TEST_REPO_RPM_PATH}"
  - echo "CMD_UPDATE_TEST_REPO_METADATA=$CMD_UPDATE_TEST_REPO_METADATA"
  
  # - export CMD_COPY_HEALTH_RPM_TO_TEST_REPO="sudo /usr/bin/cp -f ${LOCAL_BUILD_RPM_PATH}/${RPM_HEALTHCHECK_FILENAME_REGEX} /mnt/repo01/repos/test/ata3/"



  #--------- RPM DEPLOYMENT ------------------
  - if [[ $CI_PROJECT_URL == *"alln-dev-gitlab.mtd.cisco-services.com"* ]] ; then export SSH_PREFIX="ssh -i ${DEV_ATA3_ANSIBLE_GITLAB_SSH_KEY_FILE} -tt "; fi
  - if [[ $CI_PROJECT_URL == *"alln-prod-gitlab.mtd.cisco-services.com"* ]]; then export SSH_PREFIX="ssh -i ${PROD_ATA3_ANSIBLE_GITLAB_SSH_KEY_FILE} -tt "; fi

  - if [[ $CI_PROJECT_URL == *"alln-dev-gitlab.mtd.cisco-services.com"* ]]; then export ATA3_ANSIBLE_GITLAB_URL=${DEV_ATA3_GITLAB_URL}; fi
  - if [[ $CI_PROJECT_URL == *"alln-prod-gitlab.mtd.cisco-services.com"* ]]; then export ATA3_ANSIBLE_GITLAB_URL=${PROD_ATA3_GITLAB_URL}; fi

  #- if [[ $CI_PROJECT_URL == *"alln-dev-gitlab.mtd.cisco-services.com"* ]]; then export PLAYRUNNER_GITLAB_URL=${DEV_PLAYRUNNER_GITLAB_URL}; fi
  #- if [[ $CI_PROJECT_URL == *"alln-prod-gitlab.mtd.cisco-services.com"* ]]; then export PLAYRUNNER_GITLAB_URL=${PROD_PLAYRUNNER_GITLAB_URL}; fi

  - export ATA3_ANSIBLE_SETUP="hostname && uptime && whoami && pwd && mkdir -p ~/build && cd ~/build && pwd && rm -rf ata3-ansible && rm -rf playrunner && git clone ${ATA3_ANSIBLE_GITLAB_URL} && git clone ${PLAYRUNNER_GITLAB_URL} && pwd && ls -al && cd ata3-ansible && ls -al && ls -al inventory"
  - export ATA3_CMD="cd ~/build/ata3-ansible && sudo ./playbook.sh ${INVENTORY_FILENAME}"

  - if [[ $CI_PROJECT_URL == *"alln-dev-gitlab.mtd.cisco-services.com"* ]]; then export GITLAB_PUSH_CMD="git checkout customer_exclude && git pull && git push ${DEV_GIT_PUSH_TO_PROD_CUSTOMER_EXCLUDE} customer_exclude"; fi
  - if [[ $CI_PROJECT_URL == *"alln-dev-gitlab.mtd.cisco-services.com"* ]]; then export DEV_DEPLOY_CMD="sudo ./playbook.sh ${INVENTORY_FILENAME} kshlib service=kshlib"; fi
  #- if [[ $CI_PROJECT_URL == *"alln-prod-gitlab.mtd.cisco-services.com"* ]]; then export PROD_DEPLOY_CMD="sudo ./playbook.sh ${INVENTORY_FILENAME} kshlib098 service=kshlib098 -e customer_exclude_git_url=${PROD_PLAYRUNNER_GITLAB_URL} --limit wkr2"; fi

  - echo "DEV_DEPLOY_CMD=${DEV_DEPLOY_CMD}"
  #- echo "PROD_DEPLOY_CMD=${PROD_DEPLOY_CMD}"


stages:
  - build
  - test
  - deploy_dev

build:
  stage: build
  tags:
    - brogge
  script:
    - echo "Build Stage"
    - ls -la
    - echo kshlib-${ver}
    - cd ..
    # Clean up anything which is leftover from last build.
    - rm -rf kshlib-${ver}
    - ls -lart
    - pwd
    - export NEW_CURRENT_DIR=`pwd`
    - mv kshlib kshlib-${ver}
    - rm -rf kshlibbuild/SOURCES
    - mkdir -p kshlibbuild/SOURCES
    - tar zcf kshlibbuild/SOURCES/kshlib-$ver.tar.gz --exclude=.git kshlib-$ver
    - cd kshlib-$ver
    - rpmbuild -ta --define '_topdir %{expand:%%(pwd)}' --define 'dist .el7' ../kshlibbuild/SOURCES/kshlib-$ver.tar.gz ### build the  rpms
    - pwd
    - ls -lrt RPMS/noarch/
    - /usr/bin/md5sum $LOCAL_BUILD_RPM_PATH/$RPM_FILENAME
    - echo "CMD_COPY_RPM_TO_TEST_REPO=$CMD_COPY_RPM_TO_TEST_REPO"
    - eval $CMD_COPY_RPM_TO_TEST_REPO
    #- echo "$CMD_COPY_HEALTH_RPM_TO_TEST_REPO"
    #- eval $CMD_COPY_HEALTH_RPM_TO_TEST_REPO
    - export RPM_FILE_LIST=`ls $LOCAL_BUILD_RPM_PATH/*.rpm`
    #- echo $RPM_FILE_LIST
    - for i in $RPM_FILE_LIST; do echo "";echo "********** PUSHING FILE $i IN TO ARTIFACTORY **************"; echo ""; echo ""; echo "$ARTIFACTORY_CMD -T $i -XPUT $ARTIFACTORY_URL/$ARTIFACTORY_REPO/"; echo ""; eval "$ARTIFACTORY_CMD -T $i -XPUT $ARTIFACTORY_URL/$ARTIFACTORY_REPO/"; done
    - echo "CMD_UPDATE_TEST_REPO_METADATA=$CMD_UPDATE_TEST_REPO_METADATA"
    - eval $CMD_UPDATE_TEST_REPO_METADATA
    - cd ${NEW_CURRENT_DIR}
    - mv kshlib-${ver} kshlib

test:
  stage: test
  tags:
    - brogge
  script:
    - echo "Build Test"

.deploy_dev: &deploy_dev
  stage: deploy_dev
  environment:
    name: development
  only:
    - Feature-MKR-11551
  tags:
    - brogge
  script:
    - echo "Deploy to lower level environments"
    - if [[ $CI_PROJECT_URL == *"alln-dev-gitlab.mtd.cisco-services.com"* ]]; then echo "${SSH_PREFIX} ${KIT_HOSTNAME} '${ATA3_ANSIBLE_SETUP} && ${DEV_DEPLOY_CMD}'"; fi
    #- if [[ $CI_PROJECT_URL == *"alln-dev-gitlab.mtd.cisco-services.com"* ]]; then eval "${SSH_PREFIX} ${KIT_HOSTNAME} '${ATA3_ANSIBLE_SETUP} && ${DEV_DEPLOY_CMD}'"; fi

# dev kits
000.01-diablo-allen.dev:
  <<: *deploy_dev
  variables:
    KIT_HOSTNAME: dcm.000.01
